/*
 * Copyright (c) 2020, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/ {
	host1x {
		vi@15c10000 {
			num-channels = <8>;
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_vi_in0: endpoint {
						vc-id = <0>;
						port-index = <0>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out0>;
					};
				};
				port@1 {
					reg = <1>;
					liar0233_vi_in1: endpoint {
						vc-id = <1>;
						port-index = <0>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out1>;
					};
				};
				port@2 {
					reg = <2>;
					liar0233_vi_in2: endpoint {
						vc-id = <0>;
						port-index = <2>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out2>;
					};
				};
				port@3 {
					reg = <3>;
					liar0233_vi_in3: endpoint {
						vc-id = <1>;
						port-index = <2>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out3>;
					};
				};
				port@4 {
					reg = <4>;
					liar0233_vi_in4: endpoint {
						vc-id = <0>;
						port-index = <4>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out4>;
					};
				};
				port@5 {
					reg = <5>;
					liar0233_vi_in5: endpoint {
						vc-id = <1>;
						port-index = <4>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out5>;
					};
				};
				port@6 {
					reg = <6>;
					liar0233_vi_in6: endpoint {
						vc-id = <0>;
						port-index = <5>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out6>;
					};
				};
				port@7 {
					reg = <7>;
					liar0233_vi_in7: endpoint {
						vc-id = <1>;
						port-index = <5>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_out7>;
					};
				};
			};
		};

		nvcsi@15a00000 {
			num-channels = <8>;
			#address-cells = <1>;
			#size-cells = <0>;
			channel@0 {
				reg = <0>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in0: endpoint@0 {
							port-index = <0>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out0>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out0: endpoint@1 {
							remote-endpoint = <&liar0233_vi_in0>;
						};
					};
				};
			};

			channel@1 {
				reg = <1>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in1: endpoint@2 {
							port-index = <0>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out1>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out1: endpoint@3 {
							remote-endpoint = <&liar0233_vi_in1>;
						};
					};
				};
			};

			channel@2 {
				reg = <2>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in2: endpoint@4 {
							port-index = <2>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out2>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out2: endpoint@5 {
							remote-endpoint = <&liar0233_vi_in2>;
						};
					};
				};
			};

			channel@3 {
				reg = <3>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in3: endpoint@6 {
							port-index = <2>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out3>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out3: endpoint@7 {
							remote-endpoint = <&liar0233_vi_in3>;
						};
					};
				};
			};
			channel@4 {
				reg = <4>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in4: endpoint@8 {
							port-index = <4>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out4>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out4: endpoint@9 {
							remote-endpoint = <&liar0233_vi_in4>;
						};
					};
				};
			};
			channel@5 {
				reg = <5>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in5: endpoint@10 {
							port-index = <4>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out5>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out5: endpoint@11 {
							remote-endpoint = <&liar0233_vi_in5>;
						};
					};
				};
			};
			channel@6 {
				reg = <6>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in6: endpoint@12 {
							port-index = <6>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out6>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out6: endpoint@13 {
							remote-endpoint = <&liar0233_vi_in6>;
						};
					};
				};
			};
			channel@7 {
				reg = <7>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						liar0233_csi_in7: endpoint@14 {
							port-index = <6>;
							bus-width = <2>;
							remote-endpoint = <&liar0233_ar0233_out7>;
						};
					};
					port@1 {
						reg = <1>;
						liar0233_csi_out7: endpoint@15 {
							remote-endpoint = <&liar0233_vi_in7>;
						};
					};
				};
			};
		};
	};

	i2c@3180000 {
		ar0233_a@1b {
			compatible = "nvidia,ar0233";
			/* I2C device address */
			reg = <0x1b>;
			reg_mux = <0>;

			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model = "ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_a";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_a";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out0: endpoint {
						vc-id = <0>;
						port-index = <0>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in0>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "a";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <0>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};

		ar0233_b@1c {
			compatible = "nvidia,ar0233";

			reg = <0x1c>;
			reg_mux = <0>;
			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model ="ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
			//use_decibel_gain = "true";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_a";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_a";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out1: endpoint {
						vc-id = <1>;
						port-index = <0>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in1>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "b";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <1>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};
	};

	i2c@3190000 {
		ar0233_g@1b {
			compatible = "nvidia,ar0233";
			/* I2C device address */
			reg = <0x1b>;
			reg_mux = <1>;

			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model = "ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_g";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_g";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out6: endpoint {
						vc-id = <0>;
						port-index = <5>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in6>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "a";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <0>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};

		ar0233_h@1c {
			compatible = "nvidia,ar0233";

			reg = <0x1c>;
			reg_mux = <1>;
			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model ="ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
			//use_decibel_gain = "true";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_g";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_g";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out7: endpoint {
						vc-id = <1>;
						port-index = <5>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in7>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "b";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <1>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};
	};

	i2c@31b0000 {
		ar0233_e@1b {
			compatible = "nvidia,ar0233";
			/* I2C device address */
			reg = <0x1b>;
			reg_mux = <2>;

			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model = "ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_e";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_e";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out4: endpoint {
						vc-id = <0>;
						port-index = <4>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in4>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "a";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <0>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};

		ar0233_f@1c {
			compatible = "nvidia,ar0233";

			reg = <0x1c>;
			reg_mux = <2>;
			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model ="ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
			//use_decibel_gain = "true";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_e";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_e";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out5: endpoint {
						vc-id = <1>;
						port-index = <4>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in5>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "b";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <1>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};
	};

	i2c@c250000 {
		ar0233_c@1b {
			compatible = "nvidia,ar0233";
			/* I2C device address */
			reg = <0x1b>;
			reg_mux = <3>;

			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model = "ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_c";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_c";
				vc_id = "0";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out2: endpoint {
						vc-id = <0>;
						port-index = <2>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in2>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "a";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <0>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};

		ar0233_d@1c {
			compatible = "nvidia,ar0233";

			reg = <0x1c>;
			reg_mux = <3>;
			/* Physical dimensions of sensor */
			physical_w = "15.0";
			physical_h = "12.5";

			sensor_model ="ar0233";

			/* Defines number of frames to be dropped by driver internally after applying */
			/* sensor crop settings. Some sensors send corrupt frames after applying */
			/* crop co-ordinates */
			post_crop_frame_drop = "0";

			/* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
			//use_decibel_gain = "true";

			/* enable CID_SENSOR_MODE_ID for sensor modes selection */
			use_sensor_mode_id = "true";

			mode0 {/*mode ar0233_MODE_2048X1280_CROP_30FPS_LINEAR*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_c";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "grbg";

				active_w = "2048";
				active_h = "1280";
				readout_orientation = "0";
				line_length = "3344";
				inherent_gain = "1";
				pix_clk_hz = "135030720";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "118"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};

			mode1 {/*mode ar0233_MODE_1920X1080_CROP_30FPS*/
				mclk_khz = "24000";
				num_lanes = "2";
				tegra_sinterface = "serial_c";
				vc_id = "1";
				discontinuous_clk = "no";
				dpcm_enable = "false";
				cil_settletime = "0";
				dynamic_pixel_bit_depth = "12";
				csi_pixel_bit_depth = "12";
				mode_type = "bayer";
				pixel_phase = "rggb";

				active_w = "1920";
				active_h = "1080";
				readout_orientation = "0";
				line_length = "3640";
				inherent_gain = "1";
				pix_clk_hz = "146983200";
				serdes_pix_clk_hz = "833333333";

				gain_factor = "100";
				min_gain_val = "100"; /* dB */
				max_gain_val = "800"; /* dB */
				step_gain_val = "1"; /* 0.3 */
				default_gain = "100";
				min_hdr_ratio = "1";
				max_hdr_ratio = "1";
				framerate_factor = "1000000";
				min_framerate = "30000000";
				max_framerate = "30000000";
				step_framerate = "1";
				default_framerate = "30000000";
				exposure_factor = "1000000";
				min_exp_time = "49"; /*us, 2 lines*/
				max_exp_time = "33333";
				step_exp_time = "1";
				default_exp_time = "33333";/* us */
				embedded_metadata_height = "0";
			};
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					liar0233_ar0233_out3: endpoint {
						vc-id = <1>;
						port-index = <2>;
						bus-width = <2>;
						remote-endpoint = <&liar0233_csi_in3>;
						};
					};
				};
			gmsl-link {
				src-csi-port = "b";
				dst-csi-port = "a";
				serdes-csi-link = "b";
				csi-mode = "1x4";
				st-vc = <0>;
				vc-id = <1>;
				num-lanes = <2>;
				streams = "ued-u1", "raw12";
				};
			};
	};
};

/ {
	tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";
		/**
		* Physical settings to calculate max ISO BW
		*
		* num_csi_lanes = <>;
		* Total number of CSI lanes when all cameras are active
		*
		* max_lane_speed = <>;
		* Max lane speed in Kbit/s
		*
		* min_bits_per_pixel = <>;
		* Min bits per pixel
		*
		* vi_peak_byte_per_pixel = <>;
		* Max byte per pixel for the VI ISO case
		*
		* vi_bw_margin_pct = <>;
		* Vi bandwidth margin in percentage
		*
		* max_pixel_rate = <>;
		* Max pixel rate in Kpixel/s for the ISP ISO case
		*
		* isp_peak_byte_per_pixel = <>;
		* Max byte per pixel for the ISP ISO case
		*
		* isp_bw_margin_pct = <>;
		* Isp bandwidth margin in percentage
		*/
		num_csi_lanes = <8>;
		max_lane_speed = <4000000>;
		min_bits_per_pixel = <10>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <25>;
		isp_peak_byte_per_pixel = <5>;
		isp_bw_margin_pct = <25>;

		/**
		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
		 * The first part is the camera_board_id for the module; if the module is in a FFD
		 * platform, then use the platform name for this part.
		 * The second part contains the position of the module, ex. "rear" or "front".
		 * The third part contains the last 6 characters of a part number which is found
		 * in the module's specsheet from the vender.
		 */
		modules {
			module0 {
				badge = "ar0233_rear_liar0233";
				position = "rear";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 2-001b";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@3180000/ar0233_a@1b";
				};
			};

			module1 {
				badge = "ar0233_front_liar0233";
				position = "front";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 2-001c";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@3180000/ar0233_b@1c";
				};
			};

			module2 {
				badge = "ar0233_topright_liar0233";
				position = "topright";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 7-001b";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@c250000/ar0233_c@1b";
				};
			};

			module3 {
				badge = "ar0233_bottomright_liar0233";
				position = "bottomright";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 7-001c";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@c250000/ar0233_d@1c";
				};
			};

			module4 {
				badge = "ar0233_topleft_liar0233";
				position = "topleft";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 5-001b";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@31b0000/ar0233_e@1b";
				};
			};

			module5 {
				badge = "ar0233_centerright_liar0233";
				position = "centerright";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 5-001c";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@31b0000/ar0233_f@1c";
				};
			};

			module6 {
				badge = "ar0233_centerleft_liar0233";
				position = "centerleft";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 3-001b";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@3190000/ar0233_g@1b";
				};
			};

			module7 {
				badge = "ar0233_bottomleft_liar0233";
				position = "bottomleft";
				orientation = "1";
				drivernode0 {
					/* Declare PCL support driver (classically known as guid)  */
					pcl_id = "v4l2_sensor";
					/* Driver v4l2 device name */
					devname = "ar0233 3-001c";
					/* Declare the device-tree hierarchy to driver instance */
					proc-device-tree = "/proc/device-tree/i2c@3190000/ar0233_h@1c";
				};
			};

		};
	};
};
